#
# This will create a deployment of the oidc-sinatra app
# that will live on https://oidc-sinatra.agnesloadtest.identitysandbox.gov.
# This needs a few things set up by hand:
#  * The agnesloadtest.identitysandbox.gov dns zone needed to be created
#    and delegated from identitysandbox.gov in the account this is going
#    to be created in.  This is already done.
#  * An SSL cert for *.agnesloadtest.identitysandbox.gov
#    needs to be created and have it's magic auth stuff put in the loadtest
#    subdomain. This is already done.
#  * You will also need to create the sp-private-key secret with the demo_sp.key
#    in it. Like
#      kubectl create secret generic sp-private-key --from-file=demo_sp.key -n pt
#  * You will need to create the newrelic license secret:
#      kubectl create secret generic newrelic-license --from-file=newrelic-license -n pt
#
# Everything else is done automagically.  Logs should be going into cloudwatch.
#

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oidc-sinatra
  labels:
    app: oidc-sinatra
spec:
  selector:
    matchLabels:
      app: oidc-sinatra
  template:
    metadata:
      labels:
        app: oidc-sinatra
    spec:
      containers:
        - name: oidc-sinatra
          image: 894947205914.dkr.ecr.us-west-2.amazonaws.com/logindotgov/oidc-sinatra:1.4
          env:
            - name: idp_url
              value: "https://idp.agnes.identitysandbox.gov/"
            - name: acr_values
              value: "http://idmanagement.gov/ns/assurance/loa/1"
            - name: redirect_uri
              value: "https://oidc-sinatra.agnesloadtest.identitysandbox.gov/"
            - name: client_id
              value: "urn:gov:gsa:openidconnect:sp:sinatra"
            - name: sp_private_key
              valueFrom:
                secretKeyRef:
                  name: sp-private-key
                  key: demo_sp.key
                  optional: false
            - name: NEW_RELIC_LICENSE_KEY
              valueFrom:
                secretKeyRef:
                  name: newrelic-license
                  key: newrelic-license
                  optional: false
            - name: NEW_RELIC_HOST
              value: gov-collector.newrelic.com
            - name: RACK_ENV
              value: production
            - name: cache_oidc_config
              value: "true"
          resources:
            requests:
              cpu: "100m"
              memory: "160Mi"
            limits:
              memory: "512Mi"
          ports:
            - containerPort: 9292
      tolerations:
        - key: "spot"
          operator: "Equal"
          value: "true"
          effect: "NoSchedule"

---
apiVersion: v1
kind: Service
metadata:
  name: oidc-sinatra
spec:
  ports:
    - port: 9292
      targetPort: 9292
      protocol: TCP
  type: NodePort
  selector:
    app: oidc-sinatra

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: oidc-sinatra
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: oidc-sinatra
  minReplicas: 1
  maxReplicas: 1000
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 10

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: oidc-sinatra
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
    alb.ingress.kubernetes.io/target-group-attributes: stickiness.enabled=true,stickiness.lb_cookie.duration_seconds=60
    alb.ingress.kubernetes.io/target-type: ip
    external-dns.alpha.kubernetes.io/hostname: oidc-sinatra.agnesloadtest.identitysandbox.gov
spec:
  ingressClassName: alb
  tls:
    - hosts:
        - oidc-sinatra.agnesloadtest.identitysandbox.gov
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: oidc-sinatra
                port:
                  number: 9292
